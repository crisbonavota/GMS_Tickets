import express from 'express';
import helmet  from 'helmet';
import cors from 'cors';
// This file is generated by the dockerfile on the img build, so it isn't in this location on the repo but will be on the container
// @ts-ignore
import { config } from './deploy.js';
import path from 'path';
import { fileURLToPath } from 'url';

// @ts-ignore
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const server = express();

server.use(helmet({ contentSecurityPolicy: false }));
// @ts-ignore
server.use(express.urlencoded({ extended: true, strict: false }));
server.use(express.json());
server.use(cors());

const basePath = process.env.PUBLIC_URL ? process.env.PUBLIC_URL : '';
server.use(`${basePath}/`, express.static(`${__dirname}/dist/apps/container`));

const apps = config.apps.filter(app => app.serveOn.production);
// Serve each app static files under /<appName>-app
apps.forEach(app => server.use(`${basePath}/${app.name.toLowerCase()}-app`, express.static(`${__dirname}/dist/apps/${app.name.toLowerCase()}`)));

server.get(`${basePath}*`, (req, res) => {
    res.sendFile(`${__dirname}/dist/apps/container/index.html`);
});

const mainPort = process.env.PORT ? process.env.PORT : 3000;
server.listen(mainPort, () => console.log(`Example app listening on port ${mainPort}`));

